def ex1(opt: Option[Int]) = opt match {
  case Some(voo) and voo is 0 => "hello"
  case _ => "world"
}

def ex2(n: Int) = n match {
  case 1 => 2
  case 2 => 3
  case 3 => 4
} else {
  5
}

def ex3(cond: Bool) = cond match {
  case true => 2
  case false => 3
}

def ex4(cond: Unit) = cond match {
  case () => 2
}

def nested(n: Option[Int]) = n match {
  case Some(1) => 2
  case Some(2) => 3
  case x => 4
}

def main() = {
  inspect(ex1(Some(0)))
  inspect(ex1(Some(42)))
  inspect(ex1(None()))
  inspect("---")
  inspect(ex2(1))
  inspect(ex2(2))
  inspect(ex2(3))
  inspect(ex2(42))
  inspect("---")
  inspect(ex3(true))
  inspect(ex3(false))
  inspect("---")
  inspect(ex4(()))
  inspect("---")
  inspect(nested(Some(1)))
  inspect(nested(Some(5)))
  inspect(nested(None()))
}