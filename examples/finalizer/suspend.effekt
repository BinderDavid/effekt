effect Eff(): Unit

effect Eff1(): Unit

def t1() = 
    try {
        Eff()
    } with Eff {
        () => resume(())
    } on suspend {
        println("suspended")
    }


def t2() = {
    try {
        try {
            Eff1();
            Eff();
        } with Eff {
            () => resume(())
        } on suspend {
            Eff1();
            println("inner suspend")
        }
    } with Eff1 {
        () => resume(())
    } on suspend {
        println("outer suspend")
    }
}

def t3[A] { prog: () => A / Eff }: Unit = {
    try {
        try {
            prog()
        } finally {
            Eff();
            println("suspending")
        }
    } with Eff {
        () => resume(())
    }
}

def main() = {
    t1();
    t2();
    t3 {
        val x = 1 + 1
        show(x) ++ show(Eff())
    }
}