# This is a copy-and-past version of ci.yml but additionally creating a release
name: Release Artifacts

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  build-jar:
    name: Build Effekt compiler and run tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Set up NodeJS
      uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    - run: npm install amdefine

    - name: Run tests and assemble jar file
      run: sbt clean assembly

    - name: Upload jar file
      uses: actions/upload-artifact@v1
      with:
        name: effekt
        path: target/scala-2.13/effekt.jar

  build-vscode:
    name: Build the VSCode extension
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - run: npm install -g typescript
    - run: npm install -g vsce
    - run: npm install
      working-directory: dist/vscode
    - name: Package VSCode extension into .vsix file
      run: vsce package
      working-directory: dist/vscode

    - name: Upload vsix file
      uses: actions/upload-artifact@v1
      with:
        name: effekt-vscode
        path: dist/vscode/effekt-0.1.0.vsix

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-jar, build-vscode]
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Download JAR artifact
        uses: actions/download-artifact@v1
        with:
          name: effekt
          path: distribution/

      - name: Download VSCode artifact
        uses: actions/download-artifact@v1
        with:
          name: effekt-vscode
          path: distribution/

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Prerelease ${{ github.ref }}
          tag_name: ${{ github.ref }}
          body: Automatic release for ${{ github.ref }}
          draft: false
          prerelease: true

      - name: Upload jar file
        id: upload_jar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distribution/effekt.jar
          asset_name: effekt.jar
          asset_content_type: application/java-archive

      - name: Upload vsix file
        id: upload_vsix
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distribution/effekt-0.1.0.vsix
          asset_name: effekt-vscode-extension.vsix
          asset_content_type: application/zip
