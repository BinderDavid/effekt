// Jonathan Frech, 2022-08-18
// adapted from: https://raw.githubusercontent.com/effect-handlers/effect-handlers-bench/a61925f19c60600cd0bdaf8b3a6b82eea9aefcf0/benchmarks/koka/004_triples/benchmark.kk

effect Flip {
    def flip(): Boolean
}

effect Fail {
    def fail[A](): A
}

record Triple(a: Int, b: Int, c: Int)

def hashTriple(triple: Triple): Int = triple match { case Triple(a,b,c) =>
    mod(((53 * a) + 2809 * b + 148877 * c), 1000000007) }

def choice(n: Int): Int / {Flip, Fail} = {
    if (n < 1) {
        do fail[Int]()
    } else if (do flip()) {
        n
    } else {
        choice(n - 1)
    }
}

def triple(n: Int, s: Int): Triple / {Flip, Fail} = {
    val i = choice(n)
    val j = choice(i - 1)
    val k = choice(j - 1)
    if (i + j + k == s) {
        Triple(i, j, k)
    } else {
        do fail[Triple]()
    }
}

def sumTriples(n: Int, s: Int): Int = {
    try {
        val r = triple(n, s)
        hashTriple(r)
    } with Flip {
        def flip() = mod((resume(true) + resume(false)), 1000000007)
    } with Fail {
        def fail[A]() = 0
    }
}

////////////////////////////////////////////////////////////////////////////////

def main() = println(sumTriples(300, 300))
